buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
//        maven { url 'http://repo1.maven.apache.org/maven2/' }
////        maven { url 'http://repo2.maven.org/maven2/' }
////        maven { url 'http://maven.oschina.net/content/groups/public/' }
//        google()
    }
}

plugins {
    id 'java'
}

group 'tester'
version '1.0'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'distribution'   //打包tar包用到的插件

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
//    maven {
//        url 'http://repo2.maven.org/maven2/'
//    }
//    maven {
//        url 'http://repo1.maven.apache.org/maven2/'
//    }
//    maven { url 'http://maven.oschina.net/content/groups/public/' }

    mavenCentral()
}
sourceSets {
    main {
        groovy {
            srcDirs 'src/main/groovy'
        }
    }
}
dependencies {
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.5'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.8.0'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.9'
    compile group: 'com.sun.jna', name: 'jna', version: '3.0.9'
    compile 'net.sf.json-lib:json-lib:2.4:jdk15'
    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.9.0'
//    2.+版本不支持properties
//    compile group: 'org.ap、ache.logging.log4j', name: 'log4j-api', version: '2.11.0'
//    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.8.0-beta2'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.13'
    compile group: 'javax.mail', name: 'javax.mail-api', version: '1.6.0'
    compile group: 'com.sun.mail', name: 'javax.mail', version: '1.6.0'
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.5.7'
    compile group: 'com.github.dreamhead', name: 'moco-core', version: '0.12.0'
    compile group: 'redis.clients', name: 'jedis', version: '3.0.1'
    compile group: 'org.spockframework', name: 'spock-core', version: '1.3-groovy-2.5'
    compile group: 'org.spockframework', name: 'spock-spring', version: '1.3-groovy-2.5'
    compile group: 'org.springframework', name: 'spring-test', version: '5.1.9.RELEASE'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    from {
        //添加依懒到打包文件
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtime.collect { zipTree(it) }
    }
    manifest {
        attributes 'Main-Class': 'com.fun.main.Blog'
    }
}
//
//ext {
//    if (project.hasProperty('profile')) {
//        profile = project['profile']
//    } else {
//        profile = "dev"
//    }
//    println "profile:" + profile
//}
//task createDirs() {
//    file('build/package/lib').mkdirs()
//    file('build/package/bin').mkdirs()
//    file('build/package/logs').mkdirs()
//    file('build/package/conf').mkdirs()
//}
//
//task copyLibs(type: Copy) {
//    from('build/libs')
//    into('build/package/lib')
//}
////task 用来复制配置文件
//task copyConf(type: Copy) {
//    println 'copy conf from src/main/resources/' + profile
//    from('src/main/resources/' + profile)
//    into('build/package/conf')
//}
////task 用来复制bin下的脚本。这里的fileMode并没有生效，原因不详
//task copyBin(type: Copy) {
//    from('src/main/resources/bin')
//    into('build/package/bin')
//    fileMode 0744
//}
//// task 用来复制启动所依赖的jar包
//task copyDep(type: Copy) {
//    from configurations.runtime
//    into 'build/package/lib'
//}
////把上述的task串联起来
//task prepareFile(dependsOn: [
//        'createDirs',
//        'copyLibs',
//        'copyConf',
//        'copyBin',
//        'copyDep'
//]) {}
////指定打包的tar包的名字，以及文件来源目录
//distributions {
//    monitor {
//        baseName = 'azkaban-monitor'
//        contents {
//            from { 'build/package' }
//        }
//    }
//
//}
//
////distribution 插件的特性，以DistTar结尾
//monitorDistTar.dependsOn 'prepareFile'
//monitorDistTar.compression = Compression.GZIP
//monitorDistTar.extension = 'tar.gz'
//
////定义一个task，先build 然后再打包tar包
//task buildTar(dependsOn: [
//        'build',
//        monitorDistTar
//]) {}